{"version":3,"sources":["components/search/search.js","components/todo-list-item/todo-list-item.js","components/todo-list-footer/todo-list-footer.js","components/todo-list/todo-list.js","components/filter-bar/filter-bar.js","components/app/app.js","index.js"],"names":["Search","addItem","useState","value","setValue","error","setError","onSubmit","e","preventDefault","className","type","onChange","target","placeholder","TodoListItem","label","completed","id","handleToggle","handleDelete","checked","onClick","TodoListFooter","todos","isCompletedAllItems","toggleAllItemsCompleted","uncompletedItemsLength","filter","length","TodoList","toggleItemCompleted","deleteItem","map","key","FilterBar","deleteCompletedItems","handleFilter","name","clazz","todoData","TodoBody","App","setTodos","setFilter","every","visibleItems","items","item","filterItems","Date","now","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f0cd4b7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Search = ({ addItem }) => {\r\n  const [value, setValue] = useState('')\r\n  const [error, setError] = useState(false)\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (value) {\r\n      addItem(value)\r\n      setValue('')\r\n      setError(false)\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          placeholder=\"Insert todo item...\"\r\n          className=\"form-control\"\r\n        />\r\n        <button type=\"submit\" className=\"sr-only\">\r\n          Add todo item\r\n        </button>\r\n      </form>\r\n      {error && (\r\n        <div className=\"alert alert-danger\">The field must not be empty</div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nSearch.propTypes = {\r\n  addItem: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './todo-list-item.scss'\r\n\r\nconst TodoListItem = ({ label, completed, id, handleToggle, handleDelete }) => {\r\n  return (\r\n    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      <label className=\"flex-grow-1 mb-0 mr-5 text-truncate\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          onChange={() => handleToggle(id)}\r\n          className=\"mr-2\"\r\n        />\r\n        <span className={completed ? 'item-completed' : ''}>{label}</span>\r\n      </label>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-danger btn-sm\"\r\n        onClick={() => handleDelete(id)}\r\n      >\r\n        <i className=\"far fa-trash-alt\" />\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  handleToggle: PropTypes.func.isRequired,\r\n  handleDelete: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoListItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TodoListFooter = ({\r\n  todos,\r\n  isCompletedAllItems,\r\n  toggleAllItemsCompleted\r\n}) => {\r\n  const uncompletedItemsLength = todos.filter(({ completed }) => !completed)\r\n    .length\r\n\r\n  return (\r\n    <li className=\"list-group-item list-group-item-secondary d-flex justify-content-between align-items-center\">\r\n      <label className=\"mb-0\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isCompletedAllItems}\r\n          onChange={toggleAllItemsCompleted}\r\n          className=\"mr-2\"\r\n        />\r\n        Check All\r\n      </label>\r\n      <span>{uncompletedItemsLength} items left</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nTodoListFooter.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isCompletedAllItems: PropTypes.bool.isRequired,\r\n  toggleAllItemsCompleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoListFooter\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item'\r\nimport TodoListFooter from '../todo-list-footer/todo-list-footer'\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  toggleItemCompleted,\r\n  toggleAllItemsCompleted,\r\n  deleteItem,\r\n  isCompletedAllItems\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {todos.map(({ id, label, completed }) => {\r\n        return (\r\n          <TodoListItem\r\n            key={id}\r\n            label={label}\r\n            completed={completed}\r\n            id={id}\r\n            handleToggle={toggleItemCompleted}\r\n            handleDelete={deleteItem}\r\n          />\r\n        )\r\n      })}\r\n      <TodoListFooter\r\n        todos={todos}\r\n        isCompletedAllItems={isCompletedAllItems}\r\n        toggleAllItemsCompleted={toggleAllItemsCompleted}\r\n      />\r\n    </ul>\r\n  )\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleItemCompleted: PropTypes.func.isRequired,\r\n  toggleAllItemsCompleted: PropTypes.func.isRequired,\r\n  deleteItem: PropTypes.func.isRequired,\r\n  isCompletedAllItems: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst FilterBar = ({ deleteCompletedItems, handleFilter, filter }) => {\r\n  const buttons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'completed', label: 'Completed' }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between align-items-center\">\r\n      <div className=\"btn-group\">\r\n        {buttons.map(({ name, label }) => {\r\n          const clazz = filter === name ? 'btn-primary' : 'btn-outline-primary'\r\n          return (\r\n            <button\r\n              type=\"button\"\r\n              key={name}\r\n              className={`btn ${clazz}`}\r\n              onClick={() => handleFilter(name)}\r\n            >\r\n              {label}\r\n            </button>\r\n          )\r\n        })}\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-primary\"\r\n        onClick={deleteCompletedItems}\r\n      >\r\n        Clear completed\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nFilterBar.propTypes = {\r\n  deleteCompletedItems: PropTypes.func.isRequired,\r\n  handleFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired\r\n}\r\n\r\nexport default FilterBar\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Search from '../search/search'\r\nimport TodoList from '../todo-list/todo-list'\r\nimport FilterBar from '../filter-bar/filter-bar'\r\n\r\nconst todoData = [\r\n  { id: 1, label: 'My first todo', completed: false },\r\n  { id: 2, label: 'My second todo', completed: false },\r\n  { id: 3, label: 'My third todo', completed: false },\r\n  { id: 4, label: 'My new todo todo', completed: false }\r\n]\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState(todoData)\r\n  const [filter, setFilter] = useState('all')\r\n  const isCompletedAllItems = todos.every(({ completed }) => completed)\r\n\r\n  const toggleItemCompleted = id => {\r\n    setTodos(\r\n      todos.map(item =>\r\n        item.id !== id ? item : { ...item, completed: !item.completed }\r\n      )\r\n    )\r\n  }\r\n\r\n  const toggleAllItemsCompleted = () => {\r\n    setTodos(todos.map(item => ({ ...item, completed: !isCompletedAllItems })))\r\n  }\r\n\r\n  const deleteItem = id => {\r\n    setTodos(todos.filter(item => item.id !== id))\r\n  }\r\n\r\n  const deleteCompletedItems = () => {\r\n    setTodos(todos.filter(item => !item.completed))\r\n  }\r\n\r\n  const addItem = label => {\r\n    setTodos([...todos, { id: Date.now(), completed: false, label }])\r\n  }\r\n\r\n  const filterItems = (items, filter) => {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items\r\n      case 'active':\r\n        return items.filter(item => !item.completed)\r\n      case 'completed':\r\n        return items.filter(item => item.completed)\r\n      default:\r\n        return items\r\n    }\r\n  }\r\n\r\n  const visibleItems = filterItems(todos, filter)\r\n\r\n  return (\r\n    <div className=\"pt-5\">\r\n      <div className=\"container\">\r\n        <h1 className=\"font-weight-bold mb-3\">Todo List</h1>\r\n        <div className=\"mb-3\">\r\n          <Search addItem={addItem} />\r\n        </div>\r\n        {!!todos.length && (\r\n          <TodoBody\r\n            todos={visibleItems}\r\n            toggleItemCompleted={toggleItemCompleted}\r\n            deleteItem={deleteItem}\r\n            isCompletedAllItems={isCompletedAllItems}\r\n            toggleAllItemsCompleted={toggleAllItemsCompleted}\r\n            deleteCompletedItems={deleteCompletedItems}\r\n            handleFilter={setFilter}\r\n            filter={filter}\r\n          />\r\n        )}\r\n        {!todos.length && (\r\n          <h2 className=\"text-center mt-5\">\r\n            Todo list is still empty. <br />\r\n            Please, add your first todo item.\r\n          </h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TodoBody = ({\r\n  todos,\r\n  toggleItemCompleted,\r\n  deleteItem,\r\n  isCompletedAllItems,\r\n  toggleAllItemsCompleted,\r\n  deleteCompletedItems,\r\n  handleFilter,\r\n  filter\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\">\r\n        <TodoList\r\n          todos={todos}\r\n          toggleItemCompleted={toggleItemCompleted}\r\n          deleteItem={deleteItem}\r\n          isCompletedAllItems={isCompletedAllItems}\r\n          toggleAllItemsCompleted={toggleAllItemsCompleted}\r\n        />\r\n      </div>\r\n      <FilterBar\r\n        deleteCompletedItems={deleteCompletedItems}\r\n        handleFilter={handleFilter}\r\n        filter={filter}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nTodoBody.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleItemCompleted: PropTypes.func.isRequired,\r\n  deleteItem: PropTypes.func.isRequired,\r\n  isCompletedAllItems: PropTypes.bool.isRequired,\r\n  toggleAllItemsCompleted: PropTypes.func.isRequired,\r\n  deleteCompletedItems: PropTypes.func.isRequired,\r\n  handleFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/app/app'\n\nimport './index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}